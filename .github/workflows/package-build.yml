name: Package-Build

on:
  push:
    branches: [ "v2.x" ]
    paths-ignore:
    - '.github/**'
    - '**.md'
#  pull_request:
#    branches: [ "v2.x" ]
#    paths-ignore:
#    - '.github/**'
#    - '**.md'
#  schedule:
#    - cron: '15 13 * * 3'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
#        dist: [ 'centos7' ]
        dist: [ 'almalinux8','almalinux9','centos6','centos7','centos8','debian8','debian9','debian10','debian11','fedora27','fedora28','fedora33','fedora34','fedora36','fedora37','opensuse15','ubuntu14','ubuntu16','ubuntu18','ubuntu20','ubuntu22' ]
        type: [ '','-dbg','-clang' ]
        exclude:
          - dist: 'centos6'
            type: '-clang'
          - dist: 'centos7'
            type: '-clang'
          - dist: 'debian8'
            type: '-clang'
          - dist: 'debian9'
            type: '-clang'
          - dist: 'debian10'
            type: '-clang'
          - dist: 'fedora27'
            type: '-clang'
          - dist: 'fedora28'
            type: '-clang'
          - dist: 'fedora33'
            type: '-clang'
          - dist: 'ubuntu14'
            type: '-clang'
          - dist: 'ubuntu16'
            type: '-clang'
          - dist: 'ubuntu18'
            type: '-clang'
            
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: 'sysown/proxysql'
        ref: 'v2.x'
        fetch-depth: 0
      
    - name: Set GIT_VERSION
      run: |
        git fetch --tags --force
        echo "GIT_VERSION=$(git describe --long --abbrev=7)" >> $GITHUB_ENV
        
    - name: Build package
      run: |
        make ${{ matrix.dist }}${{ matrix.type }}
        
#    - name: Deploy to Repo
#      uses: easingthemes/ssh-deploy@main
#      env:
#          SSH_PRIVATE_KEY: ${{ secrets.REPO_PRIVATE_KEY }}
#          ARGS: "-ai"
#          SOURCE: "binaries/"
#          REMOTE_HOST: ${{ secrets.REPO_HOST }}
#          REMOTE_USER: ${{ secrets.REPO_USER }}
#          TARGET: ${{ secrets.REPO_TARGET }}/binaries-${{ env.GIT_VERSION }}
#          EXCLUDE: "binaries/.gitignore"
#          SCRIPT_BEFORE: |
#            ls -ld ${{ secrets.REPO_TARGET }}/*
#            (ls -1d ${{ secrets.REPO_TARGET }}/binaries-* || true) | sort -r | tail -n +10 | xargs -n1 rm -rf
#            rm -rf ${{ secrets.REPO_TARGET }}/binaries-${{ env.GIT_VERSION }}
 
    - name: Publish release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo -e "### Development Snapshot\n\nGH-Action Package-Build on PR merge into v2.x\n\ngit describe : **${GIT_VERSION}**" | gh release edit v2.x-head --repo sysown/proxysql --notes-file -
        gh release upload v2.x-head --repo sysown/proxysql --clobber binaries/proxysql*[mb]
        
    - name: Archive artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ env.GIT_VERSION }}
        path: |
          ./binaries/
          !./**/.gitignore
 
 
